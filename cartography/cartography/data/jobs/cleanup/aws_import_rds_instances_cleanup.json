{
  "statements": [
    {
      "query": "MATCH (sng:DBSubnetGroup)<-[:MEMBER_OF_DB_SUBNET_GROUP]-(:RDSInstance)<-[:RESOURCE]-(:AWSAccount{id: $AWS_ID}) WHERE sng.lastupdated <> $UPDATE_TAG WITH sng LIMIT $LIMIT_SIZE DETACH DELETE (sng)",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "Delete DBSubnetGroups that no longer exist and DETACH them from their RDS instances."
    },
    {
      "query": "MATCH (:DBSubnetGroup)<-[r:MEMBER_OF_DB_SUBNET_GROUP]-(:RDSInstance)<-[:RESOURCE]-(:AWSAccount{id: $AWS_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r)",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "Delete the link between orphaned DB Subnet Groups and their RDS Instances."
    },
    {
      "query": "MATCH (:EC2Subnet)<-[r:RESOURCE]-(:DBSubnetGroup)<-[:MEMBER_OF_DB_SUBNET_GROUP]-(:RDSInstance)<-[:RESOURCE]-(:AWSAccount{id: $AWS_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r)",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "Delete the link between orphaned DB Subnet Groups and their EC2 Subnets."
    },
    {
      "query": "MATCH (n:RDSInstance)<-[:RESOURCE]-(:AWSAccount{id: $AWS_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n)",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "Delete RDS instances that no longer exist and DETACH them from all nodes they were previously connected to."
    },
    {
      "query": "MATCH (:RDSInstance)<-[r:RESOURCE]-(:AWSAccount{id: $AWS_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r)",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "If an RDS instance still exists but is no longer associated with its old AWS Account, delete the relationship between them."
    },
    {
      "query": "MATCH (:EC2SecurityGroup)<-[r:MEMBER_OF_EC2_SECURITY_GROUP]-(:RDSInstance)<-[:RESOURCE]-(:AWSAccount{id: $AWS_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r)",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "If an RDS instance still exists and is no longer a part of its old EC2SecurityGroup, delete the relationship between them."
    },
    {
      "query": "MATCH (:RDSInstance)<-[r:IS_READ_REPLICA_OF]-(:RDSInstance)<-[:RESOURCE]-(:AWSAccount{id: $AWS_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r)",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "If an RDS instance still exists and is no longer a read replica of another RDS instance, delete the relationship between them."
    }
  ],
  "name": "cleanup RDSInstance"
}
